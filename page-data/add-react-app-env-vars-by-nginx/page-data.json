{"componentChunkName":"component---src-templates-blog-post-js","path":"/add-react-app-env-vars-by-nginx/","result":{"data":{"site":{"siteMetadata":{"title":"TS Blog"}},"markdownRemark":{"id":"4cbb3721-ae2f-590c-a0eb-debc31713500","excerpt":"V2EX 上有V友发帖讨论 React 在 Docker 部署时，如何动态的读取特定环境下的环境变量。在查阅了 Create React App 关于添加自定义环境变量的文档后，结合 nginx docker image（1.19版本及以上）提供的在 nginx config 中使用环境变量方法。可以通过 nginx…","html":"<p>V2EX 上有V友发帖讨论 <a href=\"https://v2ex.com/t/824120\">React 在 Docker 部署时，如何动态的读取特定环境下的环境变量</a>。在查阅了 Create React App 关于添加自定义环境变量的文档后，结合 nginx docker image（1.19版本及以上）提供的在 nginx config 中使用环境变量方法。可以通过 nginx 来动态注入环境变量到页面里，达到 React App\n运行时动态读取环境变量的效果。</p>\n<h2>自定义环境变量</h2>\n<p>通过 <code class=\"language-text\">create-react-app</code> 创建的 React App 可以在 HTML 及 JavaScript 文件中使用环境变量。默认可以使用 <code class=\"language-text\">NODE_ENV</code>、<code class=\"language-text\">PUBLIC_URL</code>等<a href=\"https://create-react-app.dev/docs/advanced-configuration\" title=\"内置环境变量\">内置环境变量</a>。自定义的变量使用 <code class=\"language-text\">REACT_APP_</code> 开头。在 JavaScript 中使用 <code class=\"language-text\">process.env</code> 来访问内置及自定义的环境变量。HTML 文件中使用 <code class=\"language-text\">&lt;title&gt;%REACT_APP_WEBSITE_NAME%&lt;/title&gt;</code> 语法来使用环境变量。</p>\n<h3>从服务器注入页面数据</h3>\n<p><strong>环境变量是在编译过程中嵌入到 React 应用中的</strong>。由于编译后生成的是静态 HTML/CSS/JS 文件，它们是无法在运行时读取到环境变量的。要在运行时读取它们，您需要将 HTML 加载到服务器上的内存中并在运行时替换占位符，如<a href=\"https://create-react-app.dev/docs/title-and-meta-tags#injecting-data-from-the-server-into-the-page\" title=\"服务器注入数据到页面\">此处</a>所述。例如：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token name\">doctype</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n      window<span class=\"token punctuation\">.</span><span class=\"token constant\">SERVER_DATA</span> <span class=\"token operator\">=</span> __SERVER_DATA__<span class=\"token punctuation\">;</span>\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>然后，您可以在发送响应之前将 <code class=\"language-text\">__SERVER_DATA__</code> 替换为真实数据的 JSON。然后客户端代码可以读取 <code class=\"language-text\">window.SERVER_DATA</code> 来使用它。<strong>确保在将 JSON 发送到客户端之前对其进行<a href=\"https://medium.com/node-security/the-most-common-xss-vulnerability-in-react-js-applications-2bdffbcc1fa0\" title=\"JSON 序列化\">序列化</a>，因为它会使您的应用程序容易受到 XSS 攻击。</strong></p>\n<h3>通过 <code class=\"language-text\">.env</code> 文件添加环境变量</h3>\n<p>在日常的开发中，一般会使用 <code class=\"language-text\">.env</code> 文件来定义环境变量，在项目根目录创建默认的 <code class=\"language-text\">.env</code> 文件：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">REACT_APP_BASE_URL</span><span class=\"token operator\">=</span>http://localhost\n<span class=\"token assign-left variable\">REACT_APP_API_URL</span><span class=\"token operator\">=</span>http://api.localhost</code></pre></div>\n<p>可以根据不同环境创建相应的<a href=\"https://create-react-app.dev/docs/adding-custom-environment-variables/#what-other-env-files-can-be-used\" title=\"设置\">设置</a>：</p>\n<ul>\n<li><code class=\"language-text\">.env</code>: 默认</li>\n<li><code class=\"language-text\">.env.local</code>: 本地覆盖（除测试环境之外都会加载该文件）</li>\n<li><code class=\"language-text\">.env.development</code>、<code class=\"language-text\">.env.test</code>、<code class=\"language-text\">.env.production</code>: 特定环境的配置</li>\n<li><code class=\"language-text\">.env.development.local</code>、<code class=\"language-text\">.env.test.local</code>、<code class=\"language-text\">.env.production.local</code>：特定环境配置的本地覆盖</li>\n</ul>\n<p>左侧的文件比右侧的文件具有更高的优先级：</p>\n<ul>\n<li><code class=\"language-text\">npm start</code>: <code class=\"language-text\">.env.development.local</code>, <code class=\"language-text\">.env.local</code>, <code class=\"language-text\">.env.development</code>, <code class=\"language-text\">.env</code></li>\n<li><code class=\"language-text\">npm run build</code>: <code class=\"language-text\">.env.production.local</code>, <code class=\"language-text\">.env.local</code>, <code class=\"language-text\">.env.production</code>, <code class=\"language-text\">.env</code></li>\n<li><code class=\"language-text\">npm test</code>: <code class=\"language-text\">.env.test.local</code>, <code class=\"language-text\">.env.test</code>, <code class=\"language-text\">.env</code> （注意没有 <code class=\"language-text\">.env.local</code>）</li>\n</ul>\n<p>通过不同的 <code class=\"language-text\">.env</code> 文件，可以为开发，测试，生产环境构建不同的 Bundle。如果您使用 Docker Image 来分发，部署 React 应用的话，需要针对不同的环境构建不同的镜像。</p>\n<h2><a href=\"https://hub.docker.com/_/nginx\" title=\"在 nginx config 中使用环境变量\">在 Nginx config 中使用环境变量</a></h2>\n<p>Nginx 默认是不支持在绝大多数配置块里使用环境变量的。Docker 官方 Nginx 镜像（1.19 版本及以上）提供了一个功能，会在 nginx 启动前提取环境变量，并写入配置中（具体脚本见 <a href=\"https://github.com/nginxinc/docker-nginx/blob/master/entrypoint/docker-entrypoint.sh\">docker-entrypoint.sh</a> 及 <a href=\"https://github.com/nginxinc/docker-nginx/blob/master/entrypoint/20-envsubst-on-templates.sh\">20-envsubst-on-templates.sh</a>）。</p>\n<p>以 docker-compose.yml 为例：</p>\n<div class=\"gatsby-highlight\" data-language=\"dockerfile\"><pre class=\"language-dockerfile\"><code class=\"language-dockerfile\">web<span class=\"token punctuation\">:</span>\n  image<span class=\"token punctuation\">:</span> nginx\n  volumes<span class=\"token punctuation\">:</span>\n   <span class=\"token punctuation\">-</span> ./templates<span class=\"token punctuation\">:</span>/etc/nginx/templates\n  ports<span class=\"token punctuation\">:</span>\n   <span class=\"token punctuation\">-</span> <span class=\"token string\">\"8080:80\"</span>\n  environment<span class=\"token punctuation\">:</span>\n   <span class=\"token punctuation\">-</span> NGINX_HOST=foobar.com\n   <span class=\"token punctuation\">-</span> NGINX_PORT=80</code></pre></div>\n<p>自动配置脚本默认读取 <code class=\"language-text\">/etc/nginx/templates/*.template</code> 中的模板文件，并将执行 <code class=\"language-text\">envsubst</code> 命令的结果输出到 <code class=\"language-text\">/etc/nginx/conf.d</code> 目录里。</p>\n<p>因此，如果在项目添加 <code class=\"language-text\">templates/default.conf.template</code> 文件，其中包含这样的环境变量引用：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">listen <span class=\"token variable\">${NGINX_PORT}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>输出到 <code class=\"language-text\">/etc/nginx/conf.d/default.conf</code> 则像这样：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">listen <span class=\"token number\">80</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>Build once, run anywhere</h2>\n<p>现在，我们有了一个方案来实现 React App 运行时动态加载环境变量：通过 nginx 做一个简易的服务端渲染（SSR），使用 <code class=\"language-text\">sub_filter</code> 指令注入环境变量到 <code class=\"language-text\">index.html</code> 文件中。实现 React App 构建一次，运行在不同环境下。</p>\n<p>基本实现步骤如下：</p>\n<ul>\n<li>在项目根目录添加 <code class=\"language-text\">.env.development</code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">REACT_APP_API_URL</span><span class=\"token operator\">=</span>http://api.localhost</code></pre></div>\n<ul>\n<li>在 <code class=\"language-text\">public/index.html</code> 文件中添加环境变量占位符，例如：</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token name\">doctype</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n      window<span class=\"token punctuation\">.</span>app <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        apiUrl<span class=\"token operator\">:</span> <span class=\"token string\">\"%REACT_APP_API_URL%\"</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<ul>\n<li>在 React 应用中使用 <code class=\"language-text\">window.app.apiUrl</code></li>\n<li>开发完成后，使用 Docker 构建镜像, <code class=\"language-text\">Dockerfile</code> 示例如下:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"dockerfile\"><pre class=\"language-dockerfile\"><code class=\"language-dockerfile\"><span class=\"token keyword\">FROM</span> node<span class=\"token punctuation\">:</span>14<span class=\"token punctuation\">-</span>alpine AS builder\n<span class=\"token keyword\">ENV</span> NODE_ENV production\n<span class=\"token comment\"># Add a work directory</span>\n<span class=\"token keyword\">WORKDIR</span> /app\n<span class=\"token comment\"># Cache and Install dependencies</span>\n<span class=\"token keyword\">COPY</span> package.json .\n<span class=\"token keyword\">COPY</span> yarn.lock .\n<span class=\"token keyword\">RUN</span> yarn install <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>production\n<span class=\"token comment\"># Copy app files</span>\n<span class=\"token keyword\">COPY</span> . .\n<span class=\"token comment\"># Build the app</span>\n<span class=\"token keyword\">RUN</span> yarn build\n\n<span class=\"token comment\"># Bundle static assets with nginx</span>\n<span class=\"token keyword\">FROM</span> nginx<span class=\"token punctuation\">:</span>1.21.0<span class=\"token punctuation\">-</span>alpine as production\n<span class=\"token keyword\">ENV</span> NODE_ENV production\n<span class=\"token comment\"># Copy built assets from builder</span>\n<span class=\"token keyword\">COPY</span> <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>from=builder /app/build /usr/share/nginx/html\n<span class=\"token comment\"># Add your nginx config template</span>\n<span class=\"token keyword\">COPY</span> default.conf.template /etc/nginx/templates/default.conf.template\n<span class=\"token comment\"># Expose port</span>\n<span class=\"token keyword\">EXPOSE</span> 80\n<span class=\"token comment\"># Start nginx</span>\n<span class=\"token keyword\">CMD</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"nginx\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-g\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"daemon off;\"</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>Nginx config 模板文件 <code class=\"language-text\">default.conf.template</code> 示例：</p>\n<div class=\"gatsby-highlight\" data-language=\"nginx\"><pre class=\"language-nginx\"><code class=\"language-nginx\"><span class=\"token keyword\">server</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">listen</span> <span class=\"token number\">80</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">location</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">root</span> <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>share<span class=\"token operator\">/</span>nginx<span class=\"token operator\">/</span>html<span class=\"token operator\">/</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">include</span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>nginx<span class=\"token operator\">/</span>mime<span class=\"token punctuation\">.</span><span class=\"token keyword\">types</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">try_files</span> <span class=\"token variable\">$uri</span> <span class=\"token variable\">$uri</span><span class=\"token operator\">/</span> <span class=\"token operator\">/</span><span class=\"token keyword\">index</span><span class=\"token punctuation\">.</span>html<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">sub_filter</span> <span class=\"token string\">'%REACT_APP_API_URL%'</span> <span class=\"token string\">'${REACT_APP_API_URL}'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>部署时，将相应的环境变量传递给 React App 容器</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">docker run -e <span class=\"token assign-left variable\">REACT_APP_API_URL</span><span class=\"token operator\">=</span>https://api.example.com --name your-react-app -d -p <span class=\"token number\">8080</span>:80 your-react-app-image</code></pre></div>\n<ul>\n<li>检查页面：<code class=\"language-text\">curl -i http://localhost:8080/</code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">curl</span> -i http://localhost:8080/\nHTTP/1.1 <span class=\"token number\">200</span> OK\nServer: nginx/1.21.4\nDate: Sat, <span class=\"token number\">25</span> Dec <span class=\"token number\">2021</span> <span class=\"token number\">10</span>:28:15 GMT\nContent-Type: text/html\nTransfer-Encoding: chunked\nConnection: keep-alive\n\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>doctype html<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>html <span class=\"token assign-left variable\">lang</span><span class=\"token operator\">=</span><span class=\"token string\">\"en\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>head<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>meta <span class=\"token assign-left variable\">charset</span><span class=\"token operator\">=</span><span class=\"token string\">\"utf-8\"</span>/<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>link <span class=\"token assign-left variable\">rel</span><span class=\"token operator\">=</span><span class=\"token string\">\"icon\"</span> <span class=\"token assign-left variable\">href</span><span class=\"token operator\">=</span><span class=\"token string\">\"/favicon.ico\"</span>/<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>meta <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"viewport\"</span> <span class=\"token assign-left variable\">content</span><span class=\"token operator\">=</span><span class=\"token string\">\"width=device-width,initial-scale=1\"</span>/<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>meta <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"theme-color\"</span> <span class=\"token assign-left variable\">content</span><span class=\"token operator\">=</span><span class=\"token string\">\"#000000\"</span>/<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>meta <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"description\"</span> <span class=\"token assign-left variable\">content</span><span class=\"token operator\">=</span><span class=\"token string\">\"Web site created using create-react-app\"</span>/<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>link <span class=\"token assign-left variable\">rel</span><span class=\"token operator\">=</span><span class=\"token string\">\"apple-touch-icon\"</span> <span class=\"token assign-left variable\">href</span><span class=\"token operator\">=</span><span class=\"token string\">\"/logo192.png\"</span>/<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>link <span class=\"token assign-left variable\">rel</span><span class=\"token operator\">=</span><span class=\"token string\">\"manifest\"</span> <span class=\"token assign-left variable\">href</span><span class=\"token operator\">=</span><span class=\"token string\">\"/manifest.json\"</span>/<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>title<span class=\"token operator\">></span>React App<span class=\"token operator\">&lt;</span>/title<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>window.app<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>apiUrl:<span class=\"token string\">\"https://api.example.com\"</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span>/script<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>script <span class=\"token assign-left variable\">defer</span><span class=\"token operator\">=</span><span class=\"token string\">\"defer\"</span> <span class=\"token assign-left variable\">src</span><span class=\"token operator\">=</span><span class=\"token string\">\"/static/js/main.b115a3e9.js\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>/script<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>link <span class=\"token assign-left variable\">href</span><span class=\"token operator\">=</span><span class=\"token string\">\"/static/css/main.073c9b0a.css\"</span> <span class=\"token assign-left variable\">rel</span><span class=\"token operator\">=</span><span class=\"token string\">\"stylesheet\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>/head<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>body<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>noscript<span class=\"token operator\">></span>You need to <span class=\"token builtin class-name\">enable</span> JavaScript to run this app.<span class=\"token operator\">&lt;</span>/noscript<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>div <span class=\"token assign-left variable\">id</span><span class=\"token operator\">=</span><span class=\"token string\">\"root\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>/div<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>/body<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>/html<span class=\"token operator\">></span></code></pre></div>\n<p><strong>Done!</strong> <a href=\"https://github.com/7anshuai/react-app-env-vars-example\" title=\"查看示例代码\">GitHub Repo</a></p>","frontmatter":{"title":"通过 Nginx 动态设置 React App 环境变量","date":"December 24, 2021","description":null}}},"pageContext":{"slug":"/add-react-app-env-vars-by-nginx/","previous":{"fields":{"slug":"/bash-tute/"},"frontmatter":{"title":"【译】 使用 Bash Shell 编写脚本的快速指南"}},"next":null}},"staticQueryHashes":["1246554614","2841359383"]}